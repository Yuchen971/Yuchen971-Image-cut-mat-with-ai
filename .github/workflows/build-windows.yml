name: Build Windows Executable

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Download U2NET model
      run: |
        mkdir -p auto_cut_and_mat_image\ckpt
        curl -L -o "auto_cut_and_mat_image\ckpt\u2net.pth" "https://github.com/xuebinqin/U-2-Net/releases/download/v1.0/u2net.pth"
    
    - name: Download face detection models
      run: |
        curl -o "auto_cut_and_mat_image\Face Detection Model.caffemodel" "https://github.com/opencv/opencv_3rdparty/raw/dnn_samples_face_detector_20170830/res10_300x300_ssd_iter_140000.caffemodel"
        curl -o "auto_cut_and_mat_image\Face Detector Prototxt.prototxt" "https://raw.githubusercontent.com/opencv/opencv/master/samples/dnn/face_detector/deploy.prototxt"
    
    - name: Build executable with PyInstaller
      run: |
        pyinstaller --name=BatchCut --windowed --onefile --icon=auto_cut_and_mat_image\app_icon.ico --add-data="auto_cut_and_mat_image\ckpt;ckpt" --add-data="auto_cut_and_mat_image\Face Detection Model.caffemodel;." --add-data="auto_cut_and_mat_image\Face Detector Prototxt.prototxt;." --hidden-import=torch --hidden-import=torchvision --hidden-import=cv2 --hidden-import=PIL --hidden-import=numpy --hidden-import=scikit-image --hidden-import=skimage --hidden-import=skimage.transform --hidden-import=skimage.io --hidden-import=skimage.color --hidden-import=tkinter --hidden-import=tkinter.ttk --hidden-import=tkinter.filedialog --hidden-import=tkinter.messagebox auto_cut_and_mat_image\main.py
    
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: BatchCut-Windows
        path: dist/BatchCut.exe
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release of BatchCut Windows executable
          
          ## Features
          - Face detection and cropping
          - Background removal with AI
          - Batch processing support
          - Customizable output settings
        files: dist/BatchCut.exe
        token: ${{ secrets.GITHUB_TOKEN }}
